@{
    ViewData["Title"] = "Find More";
}

<script href url="https: //fonts.googleapis.com/css2?family =Poppins:wght@200;400;700&display =swap"></script>

<style>
    ul {
        list-style-type: none;
        margin: 0;
        padding: 0;
        overflow: hidden;
    }

    li {
        float: left;
    }

        li a {
            display: block;
            color: white;
            text-align: center;
            padding: 14px 16px;
            text-decoration: none;
        }

            li a:hover:not(.active) {
                background-color: #111;
            }

    .active {
        background-color: #04AA6D;
    }

    h1 {
        color: white;
    }

    * {
        box-sizing: border-box;
    }

    main {
        flex-wrap: wrap;
        display: flex;
        justify-content: center;
    }

    :root {
        --primary-color: #22254b;
        --secondary-color: #373b69;
    }

    .movie {
        width: 300px;
        margin: 1rem;
        border-radius: 3px;
        box-shadow: 0.2px 4px 5px rgba(0,0,0,0.1);
        background-color: var(--secondary-color);
        position: relative;
        overflow: hidden;
    }


        .movie img {
            width: 100%;
        }

    .movie-info {
        color: #eee;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0.5rem 1rem 1rem;
        letter-spacing: 0.5px;
    }

        .movie-info h3 {
            margin-top: 0;
        }

        .movie-info span {
            background-color: var(--primary-color);
            padding: 0.25rem 0.5rem;
            border-radius: 3px;
            font-weight: bold;
        }

            .movie-info span.green {
                color: lightgreen;
            }

            .movie-info span.orange {
                color: orange;
            }

            .movie-info span.red {
                color: red;
            }

    .overview {
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #fff;
        padding: 1rem;
        max-height: 100%;
        transform: translateY(101%);
        transition: transform 0.3s ease-in;
    }

    .movie:hover .overview {
        transform: translateY(0)
    }

    #tags {
        width: 80%;
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        margin: 10px auto;
    }

    .tag {
        color: white;
        padding: 10px 20px;
        background-color: black;
        border-radius: 50px;
        margin: 5px;
        display: inline-block;
        cursor: pointer;
    }

        .tag.highlight {
            background-color: white;
            color: black;
        }

    .no-results {
        color: white;
    }

    .pagination {
        display: flex;
        margin: 10px 30px;
        align-items: center;
        justify-content: center;
        color: white;
    }

    .page {
        padding: 20px;
        cursor: pointer;
    }

        .page.disabled {
            cursor: not-allowed;
            color: grey;
        }

    .current {
        padding: 10px 20px;
        border-radius: 50%;
        border: 5px solid orange;
    }

    .know-more {
        background-color: orange;
        color: white;
        border: 0;
        border-radius: 50px;
        padding: 10px 20px;
        margin-top: 5px;
    }

    .overlay {
        height: 100%;
        width: 0;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        background-color: rgb(0,0,0);
        background-color: rgba(0,0,0, 0.9);
        overflow-x: hidden;
        transition: 0.5s;
    }


    .overlay-content {
        position: relative;
        top: 10%;
        width: 100%;
        text-align: center;
        margin-top: 30px;
    }

    .overlay a {
        padding: 8px;
        text-decoration: none;
        color: #818181;
        display: block;
        transition: 0.3s;
    }

        .overlay a:hover, .overlay a:focus {
            color: #f1f1f1;
        }

    .overlay .closebtn {
        position: absolute;
        top: 20px;
        right: 45px;
    }

    
        .overlay a {
        }

        .overlay .closebtn {
            top: 15px;
            right: 35px;
        }

    .embed.hide {
        display: none;
    }

    .embed.show {
        display: inline-block;
    }

    .arrow {
        position: absolute;
    }

        .arrow.left-arrow {
            top: 50%;
            left: 5%;
            transform: translateY(-50%);
        }


        .arrow.right-arrow {
            top: 50%;
            transform: translateY(-50%);
            right: 5%;
        }

    .dots {
        margin-top: 30px;
    }

        .dots .dot {
            padding: 5px 15px;
            border-radius: 50%;
            border: 5px solid var(--secondary-color);
            color: white;
            margin: 5px;
        }

            .dots .dot.active {
                border-color: orange;
            }
</style>
<div id="tags"></div>
<div id="myNav" class="overlay">

    <!-- Button to close the overlay navigation -->
    <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>

    <!-- Overlay content -->
    <div class="overlay-content" id="overlay-content"></div>

    <a href="javascript:void(0)" class="arrow left-arrow" id="left-arrow">&#8656;</a>

    <a href="javascript:void(0)" class="arrow right-arrow" id="right-arrow">&#8658;</a>

</div>
<main id="main"></main>
<div class="pagination">
    <div class="page" id="prev">Previous Page</div>
    <div class="current" id="current">1</div>
    <div class="page" id="next">Next Page</div>
</div>
<script>
    const API_KEY = 'api_key=990343a98e165ac12cf933adf929c29b';
    const BASE_URL = 'https://api.themoviedb.org/3';
    const API_URL = BASE_URL + '/discover/movie?sort_by=popularity.desc&' + API_KEY;
    const IMG_URL = 'https://image.tmdb.org/t/p/w500';
    const searchURL = BASE_URL + '/search/movie?' + API_KEY;


    const genres = [
        {
            "id": 28,
            "name": "Netflix"
        },
        {
            "id": 12,
            "name": "Disney Plus"
        },
        {
            "id": 16,
            "name": "Amazon Prime"
        },
        {
            "id": 35,
            "name": "Crave"
        },

    ]

    const main = document.getElementById('main');
    const form = document.getElementById('form');
    const search = document.getElementById('search');
    const tagsEl = document.getElementById('tags');

    const prev = document.getElementById('prev')
    const next = document.getElementById('next')
    const current = document.getElementById('current')

    var currentPage = 1;
    var nextPage = 2;
    var prevPage = 3;
    var lastUrl = '';
    var totalPages = 100;

    var selectedGenre = []
    setGenre();
    function setGenre() {
        tagsEl.innerHTML = '';
        genres.forEach(genre => {
            const t = document.createElement('div');
            t.classList.add('tag');
            t.id = genre.id;
            t.innerText = genre.name;
            t.addEventListener('click', () => {
                if (selectedGenre.length == 0) {
                    selectedGenre.push(genre.id);
                } else {
                    if (selectedGenre.includes(genre.id)) {
                        selectedGenre.forEach((id, idx) => {
                            if (id == genre.id) {
                                selectedGenre.splice(idx, 1);
                            }
                        })
                    } else {
                        selectedGenre.push(genre.id);
                    }
                }
                console.log(selectedGenre)
                getMovies(API_URL + '&with_genres=' + encodeURI(selectedGenre.join(',')))
                highlightSelection()
            })
            tagsEl.append(t);
        })
    }

    function highlightSelection() {
        const tags = document.querySelectorAll('.tag');
        tags.forEach(tag => {
            tag.classList.remove('highlight')
        })
        clearBtn()
        if (selectedGenre.length != 0) {
            selectedGenre.forEach(id => {
                const hightlightedTag = document.getElementById(id);
                hightlightedTag.classList.add('highlight');
            })
        }

    }

    function clearBtn() {
        let clearBtn = document.getElementById('clear');
        if (clearBtn) {
            clearBtn.classList.add('highlight')
        } else {

            let clear = document.createElement('div');
            clear.classList.add('tag', 'highlight');
            clear.id = 'clear';
            clear.innerText = 'Clear x';
            clear.addEventListener('click', () => {
                selectedGenre = [];
                setGenre();
                getMovies(API_URL);
            })
            tagsEl.append(clear);
        }

    }


    getMovies(API_URL);

    function getMovies(url) {
        lastUrl = url;
        fetch(url).then(res => res.json()).then(data => {
            console.log(data.results)
            if (data.results.length !== 0) {
                showMovies(data.results);
                currentPage = data.page;
                nextPage = currentPage + 1;
                prevPage = currentPage - 1;
                totalPages = data.total_pages;

                current.innerText = currentPage;

                if (currentPage <= 1) {
                    prev.classList.add('disabled');
                    next.classList.remove('disabled')
                } else if (currentPage >= totalPages) {
                    prev.classList.remove('disabled');
                    next.classList.add('disabled')
                } else {
                    prev.classList.remove('disabled');
                    next.classList.remove('disabled')
                }

                tagsEl.scrollIntoView({ behavior: 'smooth' })

            } else {
                main.innerHTML = `<h1 class="no-results">No Results Found</h1>`
            }

        })

    }


    function showMovies(data) {
        main.innerHTML = '';

        data.forEach(movie => {
            const { title, poster_path, vote_average, overview, provider, id } = movie;
            const movieEl = document.createElement('div');
            movieEl.classList.add('movie');
            movieEl.innerHTML = `
                             <img src="${poster_path ? IMG_URL + poster_path : "http://via.placeholder.com/1080x1580"}" alt="${title}">

                            <div class="movie-info">
                                <h3>${title}</h3>
                                <span class="${getColor(vote_average)}">${vote_average}</span>
                            </div>

                            <div class="overview">

                                <h3>Overview</h3>
                                ${overview}
                                <br/>
                                <button class="know-more" id="${id}">Know More</button
                            </div>

                        `

            main.appendChild(movieEl);

            document.getElementById(id).addEventListener('click', () => {
                console.log(id)
                openNav(movie)
            })
        })
    }

    const overlayContent = document.getElementById('overlay-content');
    /* Open when someone clicks on the span element */
    function openNav(movie) {
        let id = movie.id;
        fetch(BASE_URL + '/movie/' + id + '/videos?' + API_KEY).then(res => res.json()).then(videoData => {
            console.log(videoData);
            if (videoData) {
                document.getElementById("myNav").style.width = "100%";
                if (videoData.results.length > 0) {
                    var embed = [];
                    var dots = [];
                    videoData.results.forEach((video, idx) => {
                        let { name, key, site } = video

                        if (site == 'YouTube') {

                            embed.push(`
                              <iframe width="560" height="315" src="https://www.youtube.com/embed/${key}" title="${name}" class="embed hide" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

                          `)

                            dots.push(`
                              <span class="dot">${idx + 1}</span>
                            `)
                        }
                    })

                    var content = `
                        <h1 class="no-results">${movie.original_title}</h1>
                        <br/>

                        ${embed.join('')}
                        <br/>

                        <div class="dots">${dots.join('')}</div>

                        `
                    overlayContent.innerHTML = content;
                    activeSlide = 0;
                    showVideos();
                } else {
                    overlayContent.innerHTML = `<h1 class="no-results">No Results Found</h1>`
                }
            }
        })
    }

    /* Close when someone clicks on the "x" symbol inside the overlay */
    function closeNav() {
        document.getElementById("myNav").style.width = "0%";
    }

    var activeSlide = 0;
    var totalVideos = 0;

    function showVideos() {
        let embedClasses = document.querySelectorAll('.embed');
        let dots = document.querySelectorAll('.dot');

        totalVideos = embedClasses.length;
        embedClasses.forEach((embedTag, idx) => {
            if (activeSlide == idx) {
                embedTag.classList.add('show')
                embedTag.classList.remove('hide')

            } else {
                embedTag.classList.add('hide');
                embedTag.classList.remove('show')
            }
        })

        dots.forEach((dot, indx) => {
            if (activeSlide == indx) {
                dot.classList.add('active');
            } else {
                dot.classList.remove('active')
            }
        })
    }

    const leftArrow = document.getElementById('left-arrow')
    const rightArrow = document.getElementById('right-arrow')

    leftArrow.addEventListener('click', () => {
        if (activeSlide > 0) {
            activeSlide--;
        } else {
            activeSlide = totalVideos - 1;
        }

        showVideos()
    })

    rightArrow.addEventListener('click', () => {
        if (activeSlide < (totalVideos - 1)) {
            activeSlide++;
        } else {
            activeSlide = 0;
        }
        showVideos()
    })


    function getColor(vote) {
        if (vote >= 8) {
            return 'green'
        } else if (vote >= 5) {
            return "orange"
        } else {
            return 'red'
        }
    }

    form.addEventListener('submit', (e) => {
        e.preventDefault();

        const searchTerm = search.value;
        selectedGenre = [];
        setGenre();
        if (searchTerm) {
            getMovies(searchURL + '&query=' + searchTerm)
        } else {
            getMovies(API_URL);
        }

    })

    prev.addEventListener('click', () => {
        if (prevPage > 0) {
            pageCall(prevPage);
        }
    })

    next.addEventListener('click', () => {
        if (nextPage <= totalPages) {
            pageCall(nextPage);
        }
    })

    function pageCall(page) {
        let urlSplit = lastUrl.split('?');
        let queryParams = urlSplit[1].split('&');
        let key = queryParams[queryParams.length - 1].split('=');
        if (key[0] != 'page') {
            let url = lastUrl + '&page=' + page
            getMovies(url);
        } else {
            key[1] = page.toString();
            let a = key.join('=');
            queryParams[queryParams.length - 1] = a;
            let b = queryParams.join('&');
            let url = urlSplit[0] + '?' + b
            getMovies(url);
        }
    }
</script>